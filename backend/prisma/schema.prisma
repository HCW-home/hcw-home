generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum ConsultationStatus {
  SCHEDULED
  WAITING
  ACTIVE
  COMPLETED
  CANCELLED
}

model User {
  id               Int           @id @default(autoincrement())
  role             Role          @default(Patient) // Enum: Patient, Practitioner, Admin
  firstName        String
  lastName         String
  password         String
  temporaryAccount Boolean
  phoneNumber      String        @unique()
  country          String
  language         String
  sex              Sex // Enum: male, female, other
  email            String? @unique
  status           Status        @default(not_approved) // Enum: approved, not_approved
  Participant      Participant[]
}

enum Role {
  Patient
  Practitioner
  Admin
}

enum Sex {
  male
  female
  other
}

enum Status {
  approved
  not_approved
}


enum MessageService {
  SMS
  EMAIL
  WHATSAPP
  MANUALLY
}

model Consultation {
  id                 Int                @id @default(autoincrement())
  scheduledDate      DateTime?
  createdAt          DateTime?         @default(now())
  startedAt          DateTime?
  closedAt           DateTime?
  createdBy          Int?
  groupId            Int?
  owner              Int?
  messageService     MessageService?
  whatsappTemplateId String?           
  status             ConsultationStatus @default(SCHEDULED)
  participants       Participant[]
  whatsappTemplate   Whatsapp_Template? @relation(fields: [whatsappTemplateId], references: [id])
}

model Whatsapp_Template {
  id              String   @id
  key             String
  friendlyName    String
  body            String
  language        String
  category        String
  contentType     String
  variables       Json
  actions         Json
  approvalStatus  String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  sid             String
  types           Json
  url             String
  rejectionReason String
  consultations   Consultation[] 
}

model Participant {
  id             Int          @id @default(autoincrement())
  consultationId Int
  userId         Int
  isActive       Boolean      @default(false)
  joinedAt       DateTime?
  consultation   Consultation @relation(fields: [consultationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])

  @@unique([consultationId, userId])
}


model SMS_Providers {
  id         String   @id
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  order      Int
  provider   String
  prefix     String
  isWhatsapp Boolean
  isDisabled Boolean
}

model EmailTemplate {
  id            String   @id
  subject       String
  htmlBody      String
  plainTextBody String
  language      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
