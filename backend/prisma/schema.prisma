generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ConsultationStatus {
  SCHEDULED
  WAITING
  ACTIVE
  COMPLETED
  CANCELLED
}

enum Role {
  Patient
  Practitioner
  Admin
}

enum Sex {
  male
  female
  other
}

enum Status {
  approved
  not_approved
}

enum MessageService {
  SMS
  EMAIL
  WHATSAPP
  MANUALLY
}

enum MessageType {
  TEXT
  IMAGE
  FILE
}

model User {
  id               Int           @id @default(autoincrement())
  role             Role          @default(Patient)
  firstName        String
  lastName         String
  password         String
  temporaryAccount Boolean
  phoneNumber      String        @unique()
  country          String
  language         String
  sex              Sex
  status           Status        @default(not_approved)

  Participant      Participant[]
  messages         Message[]          @relation("UserMessages")
  messageReads     MessageRead[]

  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}

model Consultation {
  id                 Int                @id @default(autoincrement())
  scheduledDate      DateTime?
  createdAt          DateTime?
  startedAt          DateTime?
  closedAt           DateTime?
  createdBy          Int?
  groupId            Int?
  owner              Int?
  messageService     MessageService?
  whatsappTemplateId Int?
  status             ConsultationStatus @default(SCHEDULED)

  participants       Participant[]
  messages           Message[]
}

model Participant {
  id             Int          @id @default(autoincrement())
  consultationId Int
  userId         Int
  isActive       Boolean      @default(false)
  joinedAt       DateTime?

  consultation   Consultation @relation(fields: [consultationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])

  @@unique([consultationId, userId])
}

model Message {
  id             Int           @id @default(autoincrement())
  consultationId Int
  userId         Int
  content        String?
  type           MessageType   @default(TEXT)
  mediaUrl       String?
  createdAt      DateTime      @default(now())

  consultation   Consultation  @relation(fields: [consultationId], references: [id])
  user           User          @relation("UserMessages", fields: [userId], references: [id])
  reads          MessageRead[]
}

model MessageRead {
  id         Int      @id @default(autoincrement())
  messageId  Int
  userId     Int
  readAt     DateTime @default(now())

  message    Message  @relation(fields: [messageId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@unique([messageId, userId])
}

model Whatsapp_Template {
  id              String @id
  key             String
  friendlyName    String
  body            String
  language        String
  category        String
  contentType     String
  variables       Json
  actions         Json
  approvalStatus  String
  createdAt       BigInt
  updatedAt       BigInt
  sid             String
  types           Json
  url             String
  rejectionReason String
}

model SMS_Providers {
  id         String  @id
  createdAt  BigInt
  updatedAt  BigInt
  order      Int
  provider   String
  prefix     String
  isWhatsapp Boolean
  isDisabled Boolean
}
